<div class="row">
	<div class="col-xs-12 col-sm-7 col-md-7 col-lg-4">
		<h1 class="page-title txt-color-blueDark">
			<i class="fa fa-list fa-list-alt "></i> 
				Adjustment Request
		</h1>
	</div>
</div>

<!-- widget grid -->
<section id="widget-grid" class="">

	<!-- row -->
	<div class="row">

		<!-- NEW WIDGET START -->
		<article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">

			<!-- Widget ID (each widget will need unique ID)-->
			<div class="jarviswidget jarviswidget-color-darken" id="wid-id-0" data-widget-editbutton="false">
				<header>
					<span class="widget-icon"> <i class="fa fa-list-alt"></i> </span>
					<h2>Adjustment Request</h2>

				</header>

				<!-- widget div-->
				<div>

					<!-- widget edit box -->
					<div class="jarviswidget-editbox">
						<!-- This area used as dropdown edit box -->
						
					</div>
					
					<div class="widget-body-toolbar">
						<div class="row">
							<div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 text-right">
								<a class="btn btn-default" id="processBt">Process</a>
								<a class="btn btn-default" id="completeBt">Complete</a>
								<a class="btn btn-danger" id="deleteBt">Delete</a>
							</div>
						</div>
					</div>
					<!-- end widget edit box -->

					<!-- widget content -->
					<div class="widget-body no-padding" id="adjustmentRequestTable">

					</div>
					<!-- end widget content -->

				</div>
				<!-- end widget div -->
				
			</div>
			<!-- end widget -->

		</article>
		<!-- WIDGET END -->

	</div>

	<!-- end row -->

	<!-- end row -->

</section>
<!-- end widget grid -->
<script src="js/services/adjustment.request.service.js"></script>
<script type="text/javascript">

//<![CDATA[
	pageSetUp();
	
	// PAGE RELATED SCRIPTS
	
	var adjustmentRequestService = new AdjustmentRequestService();
	
	
	// pagefunction	
	var pagefunction = function() {
		
		var responsiveHelper_dt_basic = undefined;
		
		var breakpointDefinition = {
			tablet : 1024,
			phone : 480
		};
		
		/* End get services */
				
		
		var adjustmentRequestController = new FormController({
			tableListUrl: "/api/adjustmentRequest",
			tableId: 'adjustment_request_table',
			tableViewId: "adjustmentRequestTable",
			tableHeaders: [
			 			{
			        		dataHide: "phone",
			        		label: "ID",
							name: 'requestId'
			        	},
			        	{
			        		dataClass: "expand",
			        		icon: "fa-barcode",
			        		label: "SKU",
							name: 'pickingItem.generatedBarcode'
			        	},
			        	{
			        		dataClass: "expand",
			        		label: "Location Name",
							name: 'pickingItem.locationName'
			        	},
			        	{
			        		dataHide: "phone",
			        		label: "Warehouse Code",
							name: 'pickingItem.warehouseCode'
			        	},
			        	{
			        		dataHide: "phone",
			        		label: "Reason",
			        		name: "reason"
			        	},
			        	{
			        		dataHide: "phone",
			        		label: "Status",
			        		name: "status"
			        	},
			        	{
			        		dataHide: "phone",
			        		label: "Reg. Date",
			        		name: "regDate",
			        		type: "date"
			        	}
			               ],
			service: adjustmentRequestService,
			addFormShownAction: function() {
				
			},
			editFormShownAction: function() {
				
			},
			forms: {
				name: 'menu',
				addElements: [ 
				],
				editElements: [		               
				]
			},
			getAddModel: function() {
				return {};
			},
			getEditModel: function(item) {
				return {};
			},
			getDeleteIds: function(items) {
				var ids = [];
				for(var i=0; i<items.length; i++) {
					ids.push(items[i].requestId);
				}
				return ids.join(',');
			},
			mapModelToEditForm: function(item) {
				$("#edit-name").val(item.name);
				$("#edit-description").val(item.description);
				$("#edit-url").val(item.url);
				$("#edit-icon").val(item.icon);
				$("#edit-ordered").val(item.ordered);	
			},
			dataChangeEvent: function() {
			}
		});
		
		$("#processBt").click(function(e) {
			if(adjustmentRequestController.getSelectedItems() == null || adjustmentRequestController.getSelectedItems().length == 0) {
				showMessage("error", "Please select a request");
			} else {
				var items = adjustmentRequestController.getSelectedItems();
				var ids = [];
				for(var i=0; i<items.length; i++) {
					ids.push(items[i].requestId);
				}
				adjustmentRequestService.processMulti(ids, function(){
					adjustmentRequestController.reload();
				});
			}
		});

		$("#completeBt").click(function(e) {
			if(adjustmentRequestController.getSelectedItems() == null || adjustmentRequestController.getSelectedItems().length == 0) {
				showMessage("error", "Please select a request");
			} else {
				var items = adjustmentRequestController.getSelectedItems();
				var ids = [];
				for(var i=0; i<items.length; i++) {
					ids.push(items[i].requestId);
				}
				adjustmentRequestService.completeMulti(ids, function() {
					adjustmentRequestController.reload();
				});
			}
		});

		$("#deleteBt").click(function(e) {
			adjustmentRequestController.showDeleteModal();
		});
	};

	// load related plugins
	
	loadScript("js/plugin/datatables/jquery.dataTables.min.js", function(){
		loadScript("js/plugin/datatables/dataTables.colVis.min.js", function(){
			loadScript("js/plugin/datatables/dataTables.tableTools.min.js", function(){
				loadScript("js/plugin/datatables/dataTables.bootstrap.min.js", function(){
					loadScript("js/plugin/datatable-responsive/datatables.responsive.min.js", function(){
						loadScript("js/plugin/datatable-select/js/dataTables.select.min.js",pagefunction);
					});
				});
			});
		});
	});
//]]>	

</script>
